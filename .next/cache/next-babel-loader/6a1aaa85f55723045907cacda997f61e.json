{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var data = _ref.data,\n      error = _ref.error;\n\n  var _useState = useState(data),\n      getNews = _useState[0],\n      setNews = _useState[1];\n\n  if (getNews.length === 0) {\n    __jsx(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, \" \", err.message, \" \");\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Index, \"O0zPKepZj6dWVCtp0mT7umn/Z4c=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, errMassage;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://node-hnapi.herokuapp.com/newge=1').then(function (response) {\n            return response.json();\n          });\n\n        case 3:\n          response = _context.sent;\n          console.log(response);\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          response = [];\n          errMassage = _context.t0;\n\n        case 12:\n          return _context.abrupt(\"return\", {\n            res: {\n              data: response,\n              error: errMassage\n            }\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 7]]);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","Error","useState","Index","data","error","getNews","setNews","length","textAlign","color","err","message","getInitialProps","then","response","json","console","log","errMassage","res"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,KAAK,GAAE,SAAPA,KAAO,OAAoB;AAAA;;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBAEFH,QAAQ,CAACE,IAAD,CAFN;AAAA,MAEtBE,OAFsB;AAAA,MAEbC,OAFa;;AAG7B,MAAGD,OAAO,CAACE,MAAR,KAAmB,CAAtB,EAAwB;AACpB;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAC,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmDC,GAAG,CAACC,OAAvD;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CAjBD;;GAAMT,K;;KAAAA,K;AAmBNA,KAAK,CAACU,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKCb,KAAK,CAAC,0CAAD,CAAL,CAChBc,IADgB,CACV,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WADE,CALD;;AAAA;AAKhBD,UAAAA,QALgB;AAOhBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAPgB;AAAA;;AAAA;AAAA;AAAA;AAUhBE,UAAAA,OAAO,CAACC,GAAR;AACAH,UAAAA,QAAQ,GAAG,EAAX;AACAI,UAAAA,UAAU,cAAV;;AAZgB;AAAA,2CAeb;AAAEC,YAAAA,GAAG,EAAE;AACVhB,cAAAA,IAAI,EAAEW,QADI;AAEVV,cAAAA,KAAK,EAAEc;AAFG;AAAP,WAfa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAqBA,eAAehB,KAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nconst Index =({ data, error })=> {\n\n    const [getNews, setNews] = useState(data)\n    if(getNews.length === 0){\n        <h2 style={{ textAlign:\"center\", color: \"red\" }}> {err.message} </h2>    \n    }\n\n    return (\n        <div>\n            <ul>\n                {/* {data.map(news => (\n                    <li key={news.id}> {news.title} </li>\n                ))} */}\n            </ul>\n        </div>\n    )\n  \n}\n\nIndex.getInitialProps = async ()=> {\n    \n    let response;\n    let errMassage;\n    try {\n        response = await fetch('https://node-hnapi.herokuapp.com/newge=1')\n        .then((response => response.json())) \n        console.log(response);        \n    }\n    catch(err) {\n        console.log(err);\n        response = [];\n        errMassage = err;\n    }\n\n    return { res: {\n        data: response,\n        error: errMassage\n    } };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}