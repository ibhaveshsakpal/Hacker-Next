{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Document, { Head, Main, NextScript } from \"next/document\";\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en-us\"\n    }, __jsx(Head, null, __jsx(\"link\", {\n      rel: \"manifest\",\n      href: \"/manifest.json\"\n    }), __jsx(\"meta\", {\n      name: \"mobile-web-app-capable\",\n      content: \"yes\"\n    }), __jsx(\"meta\", {\n      name: \"apple-mobile-web-app-capable\",\n      content: \"yes\"\n    }), __jsx(\"meta\", {\n      name: \"application-name\",\n      content: \"hacker-next\"\n    }), __jsx(\"meta\", {\n      name: \"apple-mobile-web-app-title\",\n      content: \"hacker-next\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#f60\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-navbutton-color\",\n      content: \"#f60\"\n    }), __jsx(\"meta\", {\n      name: \"apple-mobile-web-app-status-bar-style\",\n      content: \"black-translucent\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-starturl\",\n      content: \"/\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"512x512\",\n      href: \"/icons/icon-512x512.png\"\n    }), __jsx(\"link\", {\n      rel: \"apple-touch-icon\",\n      type: \"image/png\",\n      sizes: \"512x512\",\n      href: \"/icons/icon-512x512.png\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"192x192\",\n      href: \"/icons/icon-192x192.png\"\n    }), __jsx(\"link\", {\n      rel: \"apple-touch-icon\",\n      type: \"image/png\",\n      sizes: \"192x192\",\n      href: \"/icons/icon-192x192.png\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null), __jsx(\"script\", null, \"if ('serviceWorker' in navigator) \", window.addEventListener('load', function () {\n      navigator.serviceWorker.register('worker.js').then(function (registration) {\n        console.log('Worker registration successful', registration.scope);\n      }, function (err) {\n        console.log('Worker registration failed', err);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }), \" else \", console.log('Service Worker is not supported by browser.'))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}