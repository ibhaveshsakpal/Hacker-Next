{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/story.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport Error from \"next/error\";\n\nvar Story = function Story(_ref) {\n  var story = _ref.story;\n\n  if (!story) {\n    return __jsx(Error, {\n      statusCode: 503,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: story.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"story-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: story.url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 45\n    }\n  }, \" \", story.title, \" \")), __jsx(\"div\", {\n    className: \"story-details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, story.points), __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, story.comments_count, \" comments\"), __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, story.time_ago))));\n};\n\n_c = Story;\n\nStory.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, res, query, story, storyId, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, res = _ref2.res, query = _ref2.query;\n            _context.prev = 1;\n            storyId = query.id;\n            _context.next = 5;\n            return fetch(\"https://node-hnapi.herokuapp.com/item/\".concat(storyId));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            story = _context.sent;\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            story = null;\n\n          case 15:\n            return _context.abrupt(\"return\", {\n              story: story\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Story;\n\nvar _c;\n\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/story.js"],"names":["fetch","Layout","Error","Story","story","title","url","points","comments_count","time_ago","getInitialProps","req","res","query","storyId","id","response","json","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,IAAMC,KAAK,GAAE,SAAPA,KAAO,OAAc;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAEvB,MAAG,CAACA,KAAJ,EAAU;AACN,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,KAAK,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B;AAAG,IAAA,IAAI,EAAED,KAAK,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsBF,KAAK,CAACC,KAA5B,MAA5B,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,KAAK,CAACG,MAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,KAAK,CAACI,cAAf,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASJ,KAAK,CAACK,QAAf,CAHJ,CAFJ,CADJ,CADJ;AAYH,CAlBD;;KAAMN,K;;AAoBNA,KAAK,CAACO,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd,EAAmBC,KAAnB,SAAmBA,KAAnB;AAAA;AAIVC,YAAAA,OAJU,GAIAD,KAAK,CAACE,EAJN;AAAA;AAAA,mBAKOf,KAAK,iDAA0Cc,OAA1C,EALZ;;AAAA;AAKVE,YAAAA,QALU;AAAA;AAAA,mBAMFA,QAAQ,CAACC,IAAT,EANE;;AAAA;AAMhBb,YAAAA,KANgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQhBc,YAAAA,OAAO,CAACC,GAAR;AACAf,YAAAA,KAAK,GAAG,IAAR;;AATgB;AAAA,6CAYb;AAAEA,cAAAA,KAAK,EAALA;AAAF,aAZa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeD,KAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport Error from \"next/error\";\n\nconst Story =({ story })=> {\n    \n    if(!story){\n        return <Error statusCode={503} />\n    }\n    \n    return (\n        <Layout title={story.title}>\n            <main>\n                <h1 className=\"story-title\"><a href={story.url}> {story.title} </a></h1>\n                <div className=\"story-details\">\n                    <strong>{story.points}</strong>\n                    <strong>{story.comments_count} comments</strong>\n                    <strong>{story.time_ago}</strong>\n                </div>\n            </main>\n        </Layout>\n    )\n}\n\nStory.getInitialProps = async ({ req, res, query})=> {\n\n    let story;\n    try{ \n        const storyId = query.id;\n        const response = await fetch(`https://node-hnapi.herokuapp.com/item/${storyId}`);\n        story = await response.json();\n    }catch(err){\n        console.log(err);\n        story = null;\n    }\n\n    return { story }\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}