{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var stories = _ref.stories,\n      page = _ref.page;\n\n  var _useState = useState(stories),\n      story = _useState[0],\n      setStories = _useState[1];\n\n  var _useState2 = useState(page),\n      pages = _useState2[0],\n      setPages = _useState2[1];\n\n  return __jsx(Layout, {\n    title: \"Hacker Next\",\n    description: \"A Hacker News clone made in Next.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(StoryList, {\n    stories: story,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), __jsx(\"footer\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/?page=\".concat(pages + 1),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \" Next page \", pages + 1, \" \"))));\n};\n\n_s(Index, \"c4LMVgl99vMP23GpnopMCw6XUbg=\");\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, res, query, stories, page, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, res = _ref2.res, query = _ref2.query;\n            page = Number(query.page) || 1;\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(\"https://node-hnapi.herokuapp.com/news?page=\".concat(page));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            stories = _context.sent;\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            stories = [];\n\n          case 15:\n            return _context.abrupt(\"return\", {\n              stories: stories,\n              page: page\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","StoryList","Layout","Link","useState","Index","stories","page","story","setStories","pages","setPages","getInitialProps","req","res","query","Number","response","json","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAuB;AAAA;;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACPH,QAAQ,CAACE,OAAD,CADD;AAAA,MAC5BE,KAD4B;AAAA,MACrBC,UADqB;;AAAA,mBAETL,QAAQ,CAACG,IAAD,CAFC;AAAA,MAE5BG,KAF4B;AAAA,MAErBC,QAFqB;;AAInC,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,WAAW,EAAC,qCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,mBAAYE,KAAK,GAAG,CAApB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeA,KAAK,GAAG,CAAvB,MADF,CADF,CANF,CADF;AAcD,CAlBD;;GAAML,K;;KAAAA,K;;AAoBNA,KAAK,CAACO,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd,EAAmBC,KAAnB,SAAmBA,KAAnB;AAElBR,YAAAA,IAFkB,GAEXS,MAAM,CAACD,KAAK,CAACR,IAAP,CAAN,IAAsB,CAFX;AAAA;AAAA;AAAA,mBAKGP,KAAK,sDACoBO,IADpB,EALR;;AAAA;AAKdU,YAAAA,QALc;AAAA;AAAA,mBAQJA,QAAQ,CAACC,IAAT,EARI;;AAAA;AAQpBZ,YAAAA,OARoB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUpBa,YAAAA,OAAO,CAACC,GAAR;AACAd,YAAAA,OAAO,GAAG,EAAV;;AAXoB;AAAA,6CAaf;AAAEA,cAAAA,OAAO,EAAPA,OAAF;AAAWC,cAAAA,IAAI,EAAJA;AAAX,aAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAgBA,eAAeF,KAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nconst Index = ({ stories, page }) => {\n  const [story, setStories] = useState(stories);\n  const [pages, setPages] = useState(page);\n\n  return (\n    <Layout\n      title=\"Hacker Next\"\n      description=\"A Hacker News clone made in Next.js\"\n    >\n      <StoryList stories={story} />\n\n      <footer>\n        <Link href={`/?page=${pages + 1}`}>\n          <a> Next page {pages + 1} </a>\n        </Link>\n      </footer>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ req, res, query }) => {\n  let stories;\n  let page = Number(query.page) || 1;\n\n  try {\n    const response = await fetch(\n      `https://node-hnapi.herokuapp.com/news?page=${page}`\n    );\n    stories = await response.json();\n  } catch (err) {\n    console.log(err);\n    stories = [];\n  }\n  return { stories, page };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}