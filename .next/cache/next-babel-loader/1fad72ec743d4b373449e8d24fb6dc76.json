{"ast":null,"code":"var _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nconst Index = ({\n  data,\n  error\n}) => {\n  console.log(err); // const [getNews, setNews] = useState(data)\n  // console.log(err, \"===err\")\n  // console.log(getNews, '===')\n  // if(getNews.length === 0){\n  //     <h2 style={{ textAlign:\"center\", color: \"red\" }}> {err.message} </h2>    \n  // }\n  // console.log(data)\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }));\n};\n\nIndex.getInitialProps = async () => {\n  let response;\n\n  try {\n    response = await fetch('https://node-hnapi.herokuapp.com/newge=1').then(response => response.json());\n    console.log(response);\n  } catch (err) {\n    console.log(err);\n    response = [];\n  }\n\n  return {\n    res: {\n      data: response,\n      error: err\n    }\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","Error","useState","Index","data","error","console","log","err","getInitialProps","response","then","json","res"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAE,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAE7BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAF6B,CAI7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CAtBD;;AAwBAL,KAAK,CAACM,eAAN,GAAwB,YAAW;AAE/B,MAAIC,QAAJ;;AACA,MAAI;AACAA,IAAAA,QAAQ,GAAG,MAAMV,KAAK,CAAC,0CAAD,CAAL,CAChBW,IADgB,CACVD,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADF,CAAjB;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACH,GAJD,CAKA,OAAMF,GAAN,EAAW;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAE,IAAAA,QAAQ,GAAG,EAAX;AACH;;AAED,SAAO;AAAEG,IAAAA,GAAG,EAAE;AACVT,MAAAA,IAAI,EAAEM,QADI;AAEVL,MAAAA,KAAK,EAAEG;AAFG;AAAP,GAAP;AAIH,CAjBD;;AAmBA,eAAeL,KAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nconst Index =({ data, error })=> {\n\n    console.log(err);\n    \n    // const [getNews, setNews] = useState(data)\n    // console.log(err, \"===err\")\n    // console.log(getNews, '===')\n    // if(getNews.length === 0){\n    //     <h2 style={{ textAlign:\"center\", color: \"red\" }}> {err.message} </h2>    \n    // }\n    // console.log(data)\n\n    return (\n        <div>\n            <ul>\n                {/* {data.map(news => (\n                    <li key={news.id}> {news.title} </li>\n                ))} */}\n            </ul>\n        </div>\n    )\n  \n}\n\nIndex.getInitialProps = async ()=> {\n    \n    let response;\n    try {\n        response = await fetch('https://node-hnapi.herokuapp.com/newge=1')\n        .then((response => response.json())) \n        console.log(response);        \n    }\n    catch(err) {\n        console.log(err);\n        response = [];\n    }\n\n    return { res: {\n        data: response,\n        error: err\n    } };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}