{"ast":null,"code":"var _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\n\nconst Index = data => {\n  if (data.pageData.length == 0) {\n    return __jsx(Error, {\n      statusCode: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, data.pageData.map(news => __jsx(\"li\", {\n    key: news.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \" \", news.title, \" \"))));\n};\n\nIndex.getInitialProps = async () => {\n  try {\n    const response = await fetch('https://node-hnapi.herokuapp.com/new').then(response => response.json());\n    return {\n      pageData: response\n    };\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","Index","data","pageData","length","map","news","id","title","getInitialProps","response","then","json","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,KAAK,GAAGC,IAAD,IAAS;AAElB,MAAGA,IAAI,CAACC,QAAL,CAAcC,MAAd,IAAwB,CAA3B,EAA6B;AACzB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAsC;;AAE1C,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACC,QAAL,CAAcE,GAAd,CAAkBC,IAAI,IACnB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBD,IAAI,CAACE,KAAzB,MADH,CADL,CADJ,CADJ;AAUH,CAfD;;AAiBAP,KAAK,CAACQ,eAAN,GAAwB,YAAW;AAE/B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,sCAAD,CAAL,CACtBW,IADsB,CAChBD,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADI,CAAvB;AAEA,WAAO;AAAET,MAAAA,QAAQ,EAAEO;AAAZ,KAAP;AACH,GAJD,CAKA,OAAMG,GAAN,EAAW;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAVD;;AAYA,eAAeZ,KAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\n\nconst Index =(data)=> {\n  \n    if(data.pageData.length == 0){\n        return <Error statusCode=\"500\" />    }\n\n    return (\n        <div>\n            <ul>\n                {data.pageData.map(news => (\n                    <li key={news.id}> {news.title} </li>\n                ))}\n            </ul>\n        </div>\n    )\n  \n}\n\nIndex.getInitialProps = async ()=> {\n    \n    try {\n        const response = await fetch('https://node-hnapi.herokuapp.com/new')\n        .then((response => response.json())) \n        return { pageData: response };\n    }\n    catch(err) {\n        console.log(err);\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}