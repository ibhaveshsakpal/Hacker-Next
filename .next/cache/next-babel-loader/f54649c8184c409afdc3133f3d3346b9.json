{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\n\nvar Index = function Index(_ref) {\n  var response = _ref.response,\n      page = _ref.page;\n  console.log(stories);\n  return __jsx(Layout, {\n    title: \"Hacker Next\",\n    description: \"A Hacker News clone made in Next.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  });\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, res, query, response, page;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, res = _ref2.res, query = _ref2.query;\n            page = Number(query.page) || 1;\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(\"https://node-hnapi.herokuapp.com/news?page=1\").then(function (response) {\n              return response.json();\n            });\n\n          case 5:\n            response = _context.sent;\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            response = [];\n\n          case 12:\n            return _context.abrupt(\"return\", {\n              response: response,\n              page: page\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","StoryList","Layout","Index","response","page","console","log","stories","getInitialProps","req","res","query","Number","then","json"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAwB;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,WAAW,EAAC,qCAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CARD;;KAAML,K;;AAUNA,KAAK,CAACM,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd,EAAmBC,KAAnB,SAAmBA,KAAnB;AAElBP,YAAAA,IAFkB,GAEXQ,MAAM,CAACD,KAAK,CAACP,IAAP,CAAN,IAAsB,CAFX;AAAA;AAAA;AAAA,mBAKHL,KAAK,CACpB,8CADoB,CAAL,CAEfc,IAFe,CAEV,UAACV,QAAD;AAAA,qBAAcA,QAAQ,CAACW,IAAT,EAAd;AAAA,aAFU,CALG;;AAAA;AAKpBX,YAAAA,QALoB;AAAA;AAAA;;AAAA;AAAA;AAAA;AASpBE,YAAAA,OAAO,CAACC,GAAR;AACAH,YAAAA,QAAQ,GAAG,EAAX;;AAVoB;AAAA,6CAYf;AAAEA,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,IAAI,EAAJA;AAAZ,aAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeF,KAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\n\nconst Index = ({ response, page }) => {\n  console.log(stories);\n  \n  return (\n    <Layout title=\"Hacker Next\" description=\"A Hacker News clone made in Next.js\">\n      {/* <StoryList stories={stories} /> */}\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ req, res, query }) => {\n  let response;\n  let page = Number(query.page) || 1;\n  \n  try {\n    response = await fetch(\n      \"https://node-hnapi.herokuapp.com/news?page=1\"\n    ).then((response) => response.json());\n  } catch (err) {\n    console.log(err);\n    response = [];\n  }\n  return { response, page };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}