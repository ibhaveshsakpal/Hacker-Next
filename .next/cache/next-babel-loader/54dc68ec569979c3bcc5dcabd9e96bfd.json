{"ast":null,"code":"console.log(\"SW Registered successful :)\");\nvar doCache = false;\nvar CACHE_NAME = 'pwa-app-cache'; // Delete old caches\n\nself.addEventListener('activate', event => {\n  const currentCachelist = [CACHE_NAME];\n  event.waitUntil(caches.keys().then(keyList => Promise.all(keyList.map(key => {\n    if (!currentCachelist.includes(key)) {\n      return caches.delete(key);\n    }\n  }))));\n}); // This triggers when user starts the app\n\nself.addEventListener('install', function (event) {\n  if (doCache) {\n    event.waitUntil(caches.open(CACHE_NAME).then(function (cache) {\n      fetch('asset-manifest.json').then(response => {\n        response.json();\n      }).then(assets => {\n        // We will cache initial page and the main.js\n        // We could also cache assets like CSS and images\n        const urlsToCache = ['/', assets['main.js']];\n        cache.addAll(urlsToCache);\n      });\n    }));\n  }\n}); // Here we intercept request and serve up the matching files\n\nself.addEventListener('fetch', function (event) {\n  if (doCache) {\n    event.respondWith(caches.match(event.request).then(function (response) {\n      return response || fetch(event.request);\n    }));\n  }\n});","map":null,"metadata":{},"sourceType":"script"}