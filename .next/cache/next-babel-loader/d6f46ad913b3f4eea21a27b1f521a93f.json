{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\n\nvar Index = function Index(_ref) {\n  var pageData = _ref.pageData;\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, pageData.map(function (news) {\n    return __jsx(\"li\", {\n      key: news.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 11\n      }\n    }, \" \", news.title, \" \");\n  }));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://node-hnapi.herokuapp.com/news?page=1');\n\n        case 3:\n          response = _context.sent;\n          data = response.json();\n          return _context.abrupt(\"return\", {\n            pageData: data\n          });\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 8]]);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","Index","pageData","map","news","id","title","getInitialProps","response","data","json"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,KAAK,GAAE,SAAPA,KAAO;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,CAACC,GAAT,CAAa,UAAAC,IAAI;AAAA,WACd;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoBD,IAAI,CAACE,KAAzB,MADc;AAAA,GAAjB,CADL,CADW;AAAA,CAAb;;KAAML,K;AAQNA,KAAK,CAACM,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGOP,KAAK,CAAC,8CAAD,CAHZ;;AAAA;AAGVQ,UAAAA,QAHU;AAIVC,UAAAA,IAJU,GAIHD,QAAQ,CAACE,IAAT,EAJG;AAAA,2CAKT;AAAER,YAAAA,QAAQ,EAAEO;AAAZ,WALS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAYA,eAAeR,KAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\n\nconst Index =({ pageData })=> (\n  <ul>\n      {pageData.map(news => (\n          <li key={news.id}> {news.title} </li>\n      ))}\n  </ul>\n)\n\nIndex.getInitialProps = async ()=> {\n    \n    try {\n        const response = await fetch('https://node-hnapi.herokuapp.com/news?page=1');\n        const data = response.json();\n        return { pageData: data };\n    }\n    catch {\n\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}