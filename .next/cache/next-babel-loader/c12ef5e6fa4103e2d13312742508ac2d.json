{"ast":null,"code":"var _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nconst Index = ({\n  stories,\n  page\n}) => {\n  const {\n    0: story,\n    1: setStories\n  } = useState(stories);\n  const {\n    0: pages,\n    1: setPages\n  } = useState(page);\n  return __jsx(Layout, {\n    title: \"Hacker Next\",\n    description: \"A Hacker News clone made in Next.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(StoryList, {\n    stories: story,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: `/?page=${pages + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \" Next page \", pages + 1, \" \"))));\n};\n\nIndex.getInitialProps = async ({\n  req,\n  res,\n  query\n}) => {\n  let stories;\n  let page = Number(query.page) || 1;\n\n  try {\n    const response = await fetch(`https://node-hnapi.herokuapp.com/news?page=${page}`);\n    stories = await response.json();\n  } catch (err) {\n    console.log(err);\n    stories = [];\n  }\n\n  return {\n    stories,\n    page\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","StoryList","Layout","Link","useState","Index","stories","page","story","setStories","pages","setPages","getInitialProps","req","res","query","Number","response","json","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACnC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAsBL,QAAQ,CAACE,OAAD,CAApC;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAACG,IAAD,CAAlC;AAEA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,WAAW,EAAC,qCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,UAASE,KAAK,GAAG,CAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeA,KAAK,GAAG,CAAvB,MADF,CADF,CANF,CADF;AAcD,CAlBD;;AAoBAL,KAAK,CAACO,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAP,KAA+B;AACrD,MAAIT,OAAJ;AACA,MAAIC,IAAI,GAAGS,MAAM,CAACD,KAAK,CAACR,IAAP,CAAN,IAAsB,CAAjC;;AAEA,MAAI;AACF,UAAMU,QAAQ,GAAG,MAAMjB,KAAK,CACzB,8CAA6CO,IAAK,EADzB,CAA5B;AAGAD,IAAAA,OAAO,GAAG,MAAMW,QAAQ,CAACC,IAAT,EAAhB;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,IAAAA,OAAO,GAAG,EAAV;AACD;;AACD,SAAO;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD,CAdD;;AAgBA,eAAeF,KAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nconst Index = ({ stories, page }) => {\n  const [story, setStories] = useState(stories);\n  const [pages, setPages] = useState(page);\n\n  return (\n    <Layout\n      title=\"Hacker Next\"\n      description=\"A Hacker News clone made in Next.js\"\n    >\n      <StoryList stories={story} />\n\n      <footer>\n        <Link href={`/?page=${pages + 1}`}>\n          <a> Next page {pages + 1} </a>\n        </Link>\n      </footer>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ req, res, query }) => {\n  let stories;\n  let page = Number(query.page) || 1;\n\n  try {\n    const response = await fetch(\n      `https://node-hnapi.herokuapp.com/news?page=${page}`\n    );\n    stories = await response.json();\n  } catch (err) {\n    console.log(err);\n    stories = [];\n  }\n  return { stories, page };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}