{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nvar Index = function Index(_ref) {\n  var data = _ref.data;\n  console.log(data); // const [getNews, setNews] = useState(data)\n  // console.log(err, \"===err\")\n  // console.log(getNews, '===')\n  // if(getNews.length === 0){\n  //     <h2 style={{ textAlign:\"center\", color: \"red\" }}> {err.message} </h2>    \n  // }\n  // console.log(data)\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://node-hnapi.herokuapp.com/newge=1').then(function (response) {\n            return response.json();\n          });\n\n        case 3:\n          response = _context.sent;\n          console.log(response);\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          response = [];\n\n        case 11:\n          return _context.abrupt(\"return\", {\n            data: response,\n            error: err\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 7]]);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","Error","useState","Index","data","console","log","getInitialProps","then","response","json","error","err"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,KAAK,GAAE,SAAPA,KAAO,OAAkB;AAAA,MAATC,IAAS,QAAfA,IAAe;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAF2B,CAI3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CAtBD;;KAAMD,K;AAwBNA,KAAK,CAACI,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAICP,KAAK,CAAC,0CAAD,CAAL,CAChBQ,IADgB,CACV,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WADE,CAJD;;AAAA;AAIhBD,UAAAA,QAJgB;AAMhBJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AANgB;AAAA;;AAAA;AAAA;AAAA;AAShBJ,UAAAA,OAAO,CAACC,GAAR;AACAG,UAAAA,QAAQ,GAAG,EAAX;;AAVgB;AAAA,2CAab;AAAEL,YAAAA,IAAI,EAAEK,QAAR;AAAkBE,YAAAA,KAAK,EAAEC;AAAzB,WAba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAgBA,eAAeT,KAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nconst Index =({ data: data})=> {\n\n    console.log(data);\n    \n    // const [getNews, setNews] = useState(data)\n    // console.log(err, \"===err\")\n    // console.log(getNews, '===')\n    // if(getNews.length === 0){\n    //     <h2 style={{ textAlign:\"center\", color: \"red\" }}> {err.message} </h2>    \n    // }\n    // console.log(data)\n\n    return (\n        <div>\n            <ul>\n                {/* {data.map(news => (\n                    <li key={news.id}> {news.title} </li>\n                ))} */}\n            </ul>\n        </div>\n    )\n  \n}\n\nIndex.getInitialProps = async ()=> {\n    \n    let response;\n    try {\n        response = await fetch('https://node-hnapi.herokuapp.com/newge=1')\n        .then((response => response.json())) \n        console.log(response);        \n    }\n    catch(err) {\n        console.log(err);\n        response = [];\n    }\n\n    return { data: response, error: err };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}