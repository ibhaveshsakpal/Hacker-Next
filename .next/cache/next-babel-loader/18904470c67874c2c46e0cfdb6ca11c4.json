{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/img.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\n\nvar Img = function Img() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, \" Images \"), __jsx(\"img\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, \"  \"));\n};\n\n_c = Img;\nImg.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var images, res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet\");\n\n        case 3:\n          images = _context.sent;\n          _context.next = 6;\n          return images.json();\n\n        case 6:\n          res = _context.sent;\n          console.log(res);\n          return _context.abrupt(\"return\", {\n            data: res\n          });\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Something went wrong!\", _context.t0);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 11]]);\n}));\nexport default Img;\n\nvar _c;\n\n$RefreshReg$(_c, \"Img\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/img.js"],"names":["fetch","Img","getInitialProps","images","json","res","console","log","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,GAAG,GAAE,SAALA,GAAK;AAAA,SACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADO;AAAA,CAAX;;KAAMA,G;AAONA,GAAG,CAACC,eAAJ,yEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEOF,KAAK,CAAC,0DAAD,CAFZ;;AAAA;AAERG,UAAAA,MAFQ;AAAA;AAAA,iBAGIA,MAAM,CAACC,IAAP,EAHJ;;AAAA;AAGRC,UAAAA,GAHQ;AAIdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAJc,2CAKP;AAAEG,YAAAA,IAAI,EAAEH;AAAR,WALO;;AAAA;AAAA;AAAA;AAOdC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAWA,eAAeN,GAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\n\nconst Img =()=> (\n    <div>\n        <h2> Images </h2>\n        <img>  </img>\n    </div>\n)\n\nImg.getInitialProps = async ()=> {\n    try {\n        const images = await fetch(\"http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet\")\n        const res = await images.json();\n        console.log(res);\n        return { data: res }\n    }catch(err) {\n        console.log(\"Something went wrong!\", err);\n    }\n}\n\nexport default Img; "]},"metadata":{},"sourceType":"module"}