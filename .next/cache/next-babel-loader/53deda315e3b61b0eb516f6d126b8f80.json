{"ast":null,"code":"var _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/story.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport Error from \"next/error\";\n\nconst Story = ({\n  story\n}) => {\n  if (!story) {\n    return __jsx(Error, {\n      statusCode: 503,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, story.comments.map(comment => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \" \", comment.content, \" \")));\n};\n\nStory.getInitialProps = async ({\n  req,\n  res,\n  query\n}) => {\n  let story;\n\n  try {\n    const storyId = query.id;\n    const response = await fetch(`https://node-hnapi.herokuapp.com/item/${storyId}`);\n    story = await response.json();\n  } catch (err) {\n    console.log(err);\n    story = null;\n  }\n\n  return {\n    story\n  };\n};\n\nexport default Story;","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/story.js"],"names":["fetch","Layout","Error","Story","story","comments","map","comment","content","getInitialProps","req","res","query","storyId","id","response","json","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,KAAK,GAAE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEvB,MAAG,CAACA,KAAJ,EAAU;AACN,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,OAAO,CAACC,OAAd,MADH,CADL,CADJ;AAOH,CAbD;;AAeAL,KAAK,CAACM,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAP,KAA6B;AAEjD,MAAIR,KAAJ;;AACA,MAAG;AACC,UAAMS,OAAO,GAAGD,KAAK,CAACE,EAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAE,yCAAwCa,OAAQ,EAAlD,CAA5B;AACAT,IAAAA,KAAK,GAAG,MAAMW,QAAQ,CAACC,IAAT,EAAd;AACH,GAJD,CAIC,OAAMC,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,IAAAA,KAAK,GAAG,IAAR;AACH;;AAED,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAbD;;AAeA,eAAeD,KAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport Error from \"next/error\";\n\nconst Story =({ story })=> {\n    \n    if(!story){\n        return <Error statusCode={503} />\n    }\n    \n    return (\n        <Layout>\n            {story.comments.map(comment => (\n                <li> {comment.content} </li>\n            ))}\n        </Layout>\n    )\n}\n\nStory.getInitialProps = async ({ req, res, query})=> {\n\n    let story;\n    try{ \n        const storyId = query.id;\n        const response = await fetch(`https://node-hnapi.herokuapp.com/item/${storyId}`);\n        story = await response.json();\n    }catch(err){\n        console.log(err);\n        story = null;\n    }\n\n    return { story }\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}