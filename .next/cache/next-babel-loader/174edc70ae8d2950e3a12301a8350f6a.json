{"ast":null,"code":"var _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/img.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\n\nconst Img = ({\n  data: data\n}) => {\n  console.log(data);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \" Images \"), data.results.map(img => __jsx(\"img\", {\n    src: img.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  })));\n};\n\nImg.getInitialProps = async () => {\n  try {\n    const images = await fetch(\"https://restcountries.eu/rest/v2/all\");\n    const res = await images.json();\n    return {\n      data: res\n    };\n  } catch (err) {\n    console.log(\"Something went wrong!\", err);\n  }\n};\n\nexport default Img;","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/img.js"],"names":["fetch","Img","data","console","log","results","map","img","thumbnail","getInitialProps","images","res","json","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEA;AAAR,CAAD,KAAoB;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGA,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,GAAG,IACjB;AAAK,IAAA,GAAG,EAAEA,GAAG,CAACC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFH,CADF;AAQD,CAZD;;AAcAP,GAAG,CAACQ,eAAJ,GAAsB,YAAY;AAChC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMV,KAAK,CACxB,sCADwB,CAA1B;AAGA,UAAMW,GAAG,GAAG,MAAMD,MAAM,CAACE,IAAP,EAAlB;AACA,WAAO;AAAEV,MAAAA,IAAI,EAAES;AAAR,KAAP;AACD,GAND,CAME,OAAOE,GAAP,EAAY;AACZV,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCS,GAArC;AACD;AACF,CAVD;;AAYA,eAAeZ,GAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\n\nconst Img = ({ data: data }) => {\n\n    console.log(data);\n    \n  return (\n    <div>\n      <h2> Images </h2>\n      {data.results.map(img =>(\n          <img src={img.thumbnail}></img>\n      ))}\n    </div>\n  );\n};\n\nImg.getInitialProps = async () => {\n  try {\n    const images = await fetch(\n      \"https://restcountries.eu/rest/v2/all\"\n    );\n    const res = await images.json();\n    return { data: res };\n  } catch (err) {\n    console.log(\"Something went wrong!\", err);\n  }\n};\n\nexport default Img;\n"]},"metadata":{},"sourceType":"module"}