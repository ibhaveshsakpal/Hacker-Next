{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var data = _ref.data,\n      err = _ref.error;\n\n  var _useState = useState(data),\n      getNews = _useState[0],\n      setNews = _useState[1];\n\n  console.log(err, \"===err\");\n  console.log(getNews, '==='); // if(getNews.length === 0){\n  //     <h2 style={{ textAlign:\"center\", color: \"red\" }}> {err.message} </h2>    \n  // }\n  // console.log(data)\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, data.map(function (news) {\n    return __jsx(\"li\", {\n      key: news.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, \" \", news.title, \" \");\n  })));\n};\n\n_s(Index, \"O0zPKepZj6dWVCtp0mT7umn/Z4c=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://node-hnapi.herokuapp.com/newge=1').then(function (response) {\n            return response.json();\n          });\n\n        case 3:\n          response = _context.sent;\n          console.log(response);\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          response = [];\n\n        case 11:\n          return _context.abrupt(\"return\", {\n            data: response,\n            error: err\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 7]]);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","Error","useState","Index","data","err","error","getNews","setNews","console","log","map","news","id","title","getInitialProps","then","response","json"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,KAAK,GAAE,SAAPA,KAAO,OAA+B;AAAA;;AAAA,MAAtBC,IAAsB,QAA5BA,IAA4B;AAAA,MAATC,GAAS,QAAhBC,KAAgB;;AAAA,kBAEbJ,QAAQ,CAACE,IAAD,CAFK;AAAA,MAEjCG,OAFiC;AAAA,MAExBC,OAFwB;;AAGxCC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAAiB,QAAjB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,KAArB,EAJwC,CAKxC;AACA;AACA;AACA;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACO,GAAL,CAAS,UAAAC,IAAI;AAAA,WACV;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoBD,IAAI,CAACE,KAAzB,MADU;AAAA,GAAb,CADL,CADJ,CADJ;AAUH,CApBD;;GAAMX,K;;KAAAA,K;AAsBNA,KAAK,CAACY,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAICf,KAAK,CAAC,0CAAD,CAAL,CAChBgB,IADgB,CACV,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WADE,CAJD;;AAAA;AAIhBD,UAAAA,QAJgB;AAMhBR,UAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AANgB;AAAA;;AAAA;AAAA;AAAA;AAShBR,UAAAA,OAAO,CAACC,GAAR;AACAO,UAAAA,QAAQ,GAAG,EAAX;;AAVgB;AAAA,2CAab;AAAEb,YAAAA,IAAI,EAAEa,QAAR;AAAkBX,YAAAA,KAAK,EAAED;AAAzB,WAba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAgBA,eAAeF,KAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\nimport { useState } from 'react';\n\nconst Index =({ data: data, error: err })=> {\n\n    const [getNews, setNews] = useState(data)\n    console.log(err, \"===err\")\n    console.log(getNews, '===')\n    // if(getNews.length === 0){\n    //     <h2 style={{ textAlign:\"center\", color: \"red\" }}> {err.message} </h2>    \n    // }\n    // console.log(data)\n\n    return (\n        <div>\n            <ul>\n                {data.map(news => (\n                    <li key={news.id}> {news.title} </li>\n                ))}\n            </ul>\n        </div>\n    )\n  \n}\n\nIndex.getInitialProps = async ()=> {\n    \n    let response;\n    try {\n        response = await fetch('https://node-hnapi.herokuapp.com/newge=1')\n        .then((response => response.json())) \n        console.log(response);        \n    }\n    catch(err) {\n        console.log(err);\n        response = [];\n    }\n\n    return { data: response, error: err };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}