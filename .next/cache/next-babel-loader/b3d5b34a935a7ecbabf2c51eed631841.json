{"ast":null,"code":"var _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { useEffect } from \"react\";\n\nconst Index = ({\n  stories,\n  page\n}) => {\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      // Use the window load event to keep the page load performant\n      window.addEventListener('load', () => {\n        navigator.serviceWorker.register('../service-worker.js');\n      });\n    }\n  });\n  return __jsx(Layout, {\n    title: \"Hacker Next\",\n    description: \"A Hacker News clone made in Next.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(StoryList, {\n    stories: stories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: `/?page=${page + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \" Next page (\", page + 1, \") \"))), __jsx(\"style\", {\n    js: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, `\n\n        footer {\n          padding: 1em;\n        }\n\n        footer a {\n          font-weight: bold;\n          color: black;\n          text-decoration: none;\n        }\n      `));\n};\n\nIndex.getInitialProps = async ({\n  req,\n  res,\n  query\n}) => {\n  let stories;\n  let page = Number(query.page) || 1;\n\n  try {\n    const response = await fetch(`https://node-hnapi.herokuapp.com/news?page=${page}`);\n    stories = await response.json();\n  } catch (err) {\n    console.log(err);\n    stories = [];\n  }\n\n  return {\n    stories,\n    page\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","StoryList","Layout","Link","useEffect","Index","stories","page","navigator","window","addEventListener","serviceWorker","register","getInitialProps","req","res","query","Number","response","json","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAEnCH,EAAAA,SAAS,CAAC,MAAK;AACb,QAAI,mBAAmBI,SAAvB,EAAkC;AAChC;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AACpCF,QAAAA,SAAS,CAACG,aAAV,CAAwBC,QAAxB,CAAiC,sBAAjC;AACD,OAFD;AAGD;AACJ,GAPU,CAAT;AASA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,WAAW,EAAC,qCAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEN,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,UAASC,IAAI,GAAG,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBA,IAAI,GAAG,CAAvB,OADF,CADF,CAHF,EASE;AAAO,IAAA,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;;;;;;;;;;;OAAZ,CATF,CADF;AAwBD,CAnCD;;AAqCAF,KAAK,CAACQ,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAP,KAA+B;AACrD,MAAIV,OAAJ;AACA,MAAIC,IAAI,GAAGU,MAAM,CAACD,KAAK,CAACT,IAAP,CAAN,IAAsB,CAAjC;;AAEA,MAAI;AACF,UAAMW,QAAQ,GAAG,MAAMlB,KAAK,CACzB,8CAA6CO,IAAK,EADzB,CAA5B;AAGAD,IAAAA,OAAO,GAAG,MAAMY,QAAQ,CAACC,IAAT,EAAhB;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAd,IAAAA,OAAO,GAAG,EAAV;AACD;;AACD,SAAO;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD,CAdD;;AAgBA,eAAeF,KAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { useEffect } from \"react\";\n\nconst Index = ({ stories, page }) => {\n\n  useEffect(()=> {\n    if ('serviceWorker' in navigator) {\n      // Use the window load event to keep the page load performant\n      window.addEventListener('load', () => {\n        navigator.serviceWorker.register('../service-worker.js');\n      })\n    }\n})\n  \n  return (\n    <Layout title=\"Hacker Next\" description=\"A Hacker News clone made in Next.js\">\n      <StoryList stories={stories} />\n      \n      <footer>\n        <Link href={`/?page=${page + 1}`}>\n          <a> Next page ({page + 1}) </a>\n        </Link>\n      </footer>\n\n      <style js>{`\n\n        footer {\n          padding: 1em;\n        }\n\n        footer a {\n          font-weight: bold;\n          color: black;\n          text-decoration: none;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ req, res, query }) => {\n  let stories;\n  let page = Number(query.page) || 1;\n  \n  try {\n    const response = await fetch(\n      `https://node-hnapi.herokuapp.com/news?page=${page}`\n    )\n    stories = await response.json();\n  } catch (err) {\n    console.log(err);\n    stories = [];\n  }\n  return { stories, page };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}