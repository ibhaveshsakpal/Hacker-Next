{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\n\nvar Index = function Index(response) {\n  if (response.length === 0) {\n    return __jsx(Error, {\n      statusCode: 503,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, response.map(function (news) {\n    return __jsx(\"li\", {\n      key: news.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }, \" \", news.title, \" \");\n  })));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://node-hnapi.herokuapp.com/news?page=1').then(function (response) {\n            return response.json();\n          });\n\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", {\n            response: response\n          });\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          response = [];\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 7]]);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/bhavesh/data/Practice/Next Js/Small Apps/Hacker-Next/pages/index.js"],"names":["fetch","Error","Index","response","length","map","news","id","title","getInitialProps","then","json","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,IAAMC,KAAK,GAAE,SAAPA,KAAO,CAACC,QAAD,EAAa;AAEtB,MAAGA,QAAQ,CAACC,MAAT,KAAoB,CAAvB,EAAyB;AACrB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,CAACE,GAAT,CAAa,UAAAC,IAAI;AAAA,WACd;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoBD,IAAI,CAACE,KAAzB,MADc;AAAA,GAAjB,CADL,CADJ,CADJ;AAUH,CAhBD;;KAAMN,K;AAkBNA,KAAK,CAACO,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAICT,KAAK,CAAC,8CAAD,CAAL,CAChBU,IADgB,CACV,UAAAP,QAAQ;AAAA,mBAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,WADE,CAJD;;AAAA;AAIhBR,UAAAA,QAJgB;AAAA,2CAMT;AAAEA,YAAAA,QAAQ,EAARA;AAAF,WANS;;AAAA;AAAA;AAAA;AAShBS,UAAAA,OAAO,CAACC,GAAR;AACAV,UAAAA,QAAQ,GAAG,EAAX;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAcA,eAAeD,KAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Error from 'next/error';\n\nconst Index =(response)=> {\n  \n    if(response.length === 0){\n        return <Error statusCode={503} />    \n    }\n\n    return (\n        <div>\n            <ul>\n                {response.map(news => (\n                    <li key={news.id}> {news.title} </li>\n                ))}\n            </ul>\n        </div>\n    )\n  \n}\n\nIndex.getInitialProps = async ()=> {\n    \n    let response;\n    try {\n        response = await fetch('https://node-hnapi.herokuapp.com/news?page=1')\n        .then((response => response.json())) \n        return { response };\n    }\n    catch(err) {\n        console.log(err);\n        response = [];\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}